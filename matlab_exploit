clear all

X = [0.05 0.1 0.15 0.2 0.3 0.4 0.5 0.6 0.7 1];

Y=zeros(1,10);
Uj=zeros(1,10);
vtn=zeros(1,10);
b=zeros(1,6);

n_first = 1;
n_last = 10;


% Détermination de la demi-largeur

for n=n_first:n_last
   [x,y]=read_data('line',n);
   vect(:,1)= x;
   vect(:,2)= y;
   w = vect(:,2) ./ vect(51,2);

    dl = 100;
    for i=1:51
        dl = min(abs(0.5.* vect(51,2) - vect(i,2)),dl);
        if dl == abs(0.5.* vect(51,2) - vect(i,2))        % boucle demi-largeur
            if  0.5 * vect(51,2) - vect(i,2) >= 0
                [Y(n)] = interpolate(vect(i,2),vect(i,1),vect(i+1,2),vect(i+1,1),0.5.* vect(51,2)) ;
            elseif 0.5 * vect(51,2) - vect(i,2) < 0
                [Y(n)] = interpolate(vect(i-1,2),vect(i-1,1),vect(i,2),vect(i,1),0.5.* vect(51,2)) ;
            end
        end
    end

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if n>3 && n~=10                                         % exploitation viscosité turbulente
    [x,y]=read_data('supline',n);
    ve(:,1) = x;
    ve(:,2) = y;

    D=ve(:,2)./(vect(51,2) .*Y(n));                   % déternination de nu/uj*e en fonction de y
      figure(4)
      plot(ve(:,1),D)
      xlabel('y')
      ylabel('nu/uj*e')
      grid on
      hold on      

   vtn(n)= ve(51,2)./(vect(51,2).*Y(n));                  % viscosité turbulente normalisé
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    z=vect(:,1)/Y(n);
    figure(3)
    plot(z,w)
    hold on
    xlabel('y/e')
    ylabel('u/uj')
    grid on
end

figure(4)
legend('x=0,2','x=0,3','x=0,4','x=0,5','x=0,6','x=0,7')

figure(1)
plot(X,Y,'-o')
grid on
xlabel('x en m')
ylabel('e(x)')
title('Demi-largeur e(x) en fonction de x')


% Vitesse sur l'axe et comparaison avec la théorie

velocityaxe=load('velocityaxe.txt');
u=velocityaxe(:,1);
v=velocityaxe(:,2);


for j=1:10
    Uj(j)= 13./sqrt(X(j));
end

figure(2)
plot(u,v)

hold on
plot(X,Uj,'-x')
xlabel('x en m')
ylabel('Uj')

legend('v_{exp}','v_{théo}')

M = [0.2 0.3 0.4 0.5 0.6 0.7]; % viscosité normalisé

for p=1:6
    b(p)=vtn(p+3);
end

figure(5)
plot(M,b,'-x')
xlabel('x en m')
ylabel('nu/(Uj*e(x))')
grid on
axis([0 1 0 0.1])

function [x,y]=read_data(root,n)

suffix='.txt';
file_name=[root,num2str(n,'%.2i'),suffix];
data=load(file_name);

x=data(:,1);
y=data(:,2);
end


function [intp]= interpolate(x1, y1, x2, y2, x)
% Calculate corresponding y-coordinate
intp = y1 + (y2-y1)/(x2-x1).* (x-x1);
end





